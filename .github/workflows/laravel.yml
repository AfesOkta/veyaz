name: Laravel

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  laravel:
    name: Laravel (PHP ${{ matrix.php-versions }})
    runs-on: ubuntu-latest
    env:
      DB_DATABASE: laravel
      DB_USERNAME: root
      DB_PASSWORD: password
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: laravel
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['7.4', '8.0', '8.1']

    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '7.4'
        
    - uses: actions/checkout@v2
    
    - name: Start mysql service
      run: sudo systemctl start mysql
          
    - name: Install Node Dependencies
      run: npm install
      
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      
    #- name: Install Dependencies
     # run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Get composer cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Cache composer dependencies
      uses: actions/cache@v2
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        # Use composer.json for key, if composer.lock is not committed.
        # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Install Composer dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader

    - name: Generate key
      run: php artisan key:generate
      
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
      
    - name: Clear Config
      run: php artisan config:clear

    - name: Run Migration
      run: php artisan migrate -v
      env:
        DB_PORT: ${{ job.services.mysql.ports['3306'] }}

    - name: Test with phpunit
      run: vendor/bin/phpunit --coverage-text
      env:
         DB_PORT: ${{ job.services.mysql.ports['3306'] }}
